version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:14.16.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command:  echo ${CURRENT_BRANCH}
      - restore_cache: 
          key:
            - app-{{ checksum "package.json" }}
            - app-
      - run:
          name: Install dependencies
          command:  npm install
      - save_cache:
          paths: 
            - node_modules
          key: app-{{ checksum "package.json" }} 
  deploy-to-aws-s3:
    docker:
      - image: circleci/node:14.16.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command:  echo ${CURRENT_BRANCH}
      - run:
          name: Install aws cli
          working_directory: /
          command: | 
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Buil Project
          command: | 
            npm install
            npm run build    
            cd build
            zip ../build.zip -r * .[^]*
            echo "build successful" 
      - run:
          name: Deploy to AWS S3
          command: | 
            if [ "${CURRENT_BRANCH}" == "master" ] then    
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CURRENT_BRANCH}" == "stagin" ] then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi
  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:14.16.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command:  echo ${CURRENT_BRANCH}
      - run:
          name: Install aws cli
          working_directory: /
          command: | 
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Buil Project
          command: | 
            npm install
            npm run build    
            cd build
            zip ../build.zip -r * .[^]*
            echo "build successful" 
      - run:
          name: Deploy to AWS Cloudfront
          command: | 
            aws configure set preview.cloudfront
            if [ "${CURRENT_BRANCH}" == "master" ] then    
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID_PRODUCTION} --paths /\*
            elif [ "${CURRENT_BRANCH}" == "stagin" ] then
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID_STAGING} --paths /\*              
            else
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID_DEV} --paths /\*             
            fi

worflows:
  build and deploy:
    jobs:
      - build
      - deploy-to-aws-s3:  
          requires:
            - build 
          filters:
            branches: 
              only: 
                - develop
                - staging
                - master  
      - deploy-to-aws-cloudfront:  
          requires:
            - deploy-to-aws-s3 
          filters:
            branches: 
              only: 
                - develop
                - staging
                - master  








      

